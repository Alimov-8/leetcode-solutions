# 1st Solution with Stack (pop, insert)
class Solution:
    def rotate(self, nums: List[int], k: int) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        for _ in range(k):
            num = nums.pop()
            nums.insert(0, num)
            
            
# 2nd Solution  with 2 pointers nad reversing the list elements  
class Solution:
    def rotate(self, nums: List[int], k: int) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        k = k % len(nums)
        
        def reverse(left, right):
            while(left<=right):
                nums[left], nums[right] = nums[right], nums[left]
                left = left + 1
                right = right - 1
                
        # Reverse all list elements [1,2,3,4,5,6,7] -> [7,6,5,4,3,2,1]
        left, right = 0, len(nums)-1
        reverse(left, right)
        
        # Reverse 0 -> k list elements [7,6,5,4,3,2,1] -> [5,6,7,4,3,2,1]
        left, right = 0, k-1
        reverse(left, right)
        
        # Reverse k -> end of list elements [5,6,7,4,3,2,1] -> [5,6,7,1,2,3,4]
        left, right = k, len(nums)-1  
        reverse(left, right)
